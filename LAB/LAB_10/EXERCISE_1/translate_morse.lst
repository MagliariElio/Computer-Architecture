


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             morse_code, DATA, READONLY
    3 00000000 41 4A 53 
              32       Morse_Code
                               DCB              "A", "J", "S", "2"
    4 00000004 42 4B 54 
              33               DCB              "B", "K", "T", "3"
    5 00000008 43 4C 55 
              34               DCB              "C", "L", "U", "4"
    6 0000000C 44 4D 56 
              35               DCB              "D", "M", "V", "5"
    7 00000010 45 4E 57 
              36               DCB              "E", "N", "W", "6"
    8 00000014 46 4F 58 
              37               DCB              "F", "O", "X", "7"
    9 00000018 47 50 59 
              38               DCB              "G", "P", "Y", "8"
   10 0000001C 48 51 5A 
              39               DCB              "H", "Q", "Z", "9"
   11 00000020 49 52 31 
              30               DCB              "I", "R", "1", "0"
   12 00000024         
   13 00000024 FFFFFF01 
              FFFF0111 
              FFFFF000 
              FFF00111 Morse_Value
                               DCD              0xFFFFFF01, 0xFFFF0111, 0xFFFFF
000, 0xFFF00111
   14 00000034 FFFF1000 
              FFFFF101 
              FFFFFFF1 
              FFF00011         DCD              0xFFFF1000, 0xFFFFF101, 0xFFFFF
FF1, 0xFFF00011
   15 00000044 FFFF1010 
              FFFF0100 
              FFFFF001 
              FFF00001         DCD              0xFFFF1010, 0xFFFF0100, 0xFFFFF
001, 0xFFF00001
   16 00000054 FFFFF100 
              FFFFFF11 
              FFFF0001 
              FFF00000         DCD              0xFFFFF100, 0xFFFFFF11, 0xFFFF0
001, 0xFFF00000
   17 00000064 FFFFFFF0 
              FFFFFF10 
              FFFFF011 
              FFF10000         DCD              0xFFFFFFF0, 0xFFFFFF10, 0xFFFFF
011, 0xFFF10000
   18 00000074 FFFF0010 
              FFFFF111 
              FFFF1001 
              FFF11000         DCD              0xFFFF0010, 0xFFFFF111, 0xFFFF1
001, 0xFFF11000
   19 00000084 FFFFF110 
              FFFF0110 
              FFFF1011 
              FFF11100         DCD              0xFFFFF110, 0xFFFF0110, 0xFFFF1
011, 0xFFF11100
   20 00000094 FFFF0000 



ARM Macro Assembler    Page 2 


              FFFF1101 
              FFFF1100 
              FFF11110         DCD              0xFFFF0000, 0xFFFF1101, 0xFFFF1
100, 0xFFF11110
   21 000000A4 FFFFFF00 
              FFFFF010 
              FFF01111 
              FFF11111         DCD              0xFFFFFF00, 0xFFFFF010, 0xFFF01
111, 0xFFF11111
   22 000000B4         
   23 000000B4                 AREA             asm_functions, CODE, READONLY
   24 00000000        0 
                       vett_input
                               RN               R0          ;morse code vector 
                                                            to convert
   25 00000000        1 
                       vett_input_length
                               RN               R1          ;length of the vect
                                                            or to convert
   26 00000000        2 
                       vett_output
                               RN               R2          ;ASCII output vecto
                                                            r
   27 00000000        3 
                       vett_output_length
                               RN               R3          ;length of the outp
                                                            ut vector
   28 00000000        4 
                       change_symbol
                               RN               R4          ;the value represen
                                                            ting the change of 
                                                            symbol in the input
                                                             vector
   29 00000000        5 
                       space   RN               R5          ;the value represen
                                                            ting the space in t
                                                            he input vector
   30 00000000        6 
                       sentence_end
                               RN               R6          ;the value represen
                                                            ting the end of the
                                                             sentence in the in
                                                            put vector
   31 00000000        7 
                       i       RN               R7
   32 00000000        8 
                       value   RN               R8
   33 00000000        A 
                       translation
                               RN               R10
   34 00000000        B 
                       j       RN               R11         ;index for vett_out
                                                            put
   35 00000000         
   36 00000000         
   37 00000000         translate_morse
                               PROC
   38 00000000                 EXPORT           translate_morse
   39 00000000 46EC            MOV              R12, sp



ARM Macro Assembler    Page 3 


   40 00000002 E92D 4DF0       STMFD            sp!,{R4-R8,R10-R11,lr}
   41 00000006         
   42 00000006 F8DC 4000       LDR              R4, [R12]
   43 0000000A F8DC 5004       LDR              R5, [R12,#4]
   44 0000000E F8DC 6008       LDR              R6, [R12, #8]
   45 00000012         
   46 00000012         
   47 00000012 F04F 0700       MOV              i, #0       ;i = 0
   48 00000016 F04F 0B00       MOV              j, #0       ;j = 0
   49 0000001A F04F 3AFF       MOV              translation, #0xFFFFFFFF ;trans
                                                            lation is register 
                                                            containg 0 and 1 tr
                                                            anslated from value
                                                            
   50 0000001E         loop
   51 0000001E 428F            CMP              i, vett_input_length ;if(i >= v
                                                            ett_input_length) g
                                                            oto exit
   52 00000020 D22D            BHS              exit
   53 00000022         
   54 00000022 F810 8007       LDRB             value, [vett_input, i] ;value =
                                                             vet_input[i]
   55 00000026 F107 0701       ADD              i, #1
   56 0000002A         
   57 0000002A         check_0
   58 0000002A F1B8 0F30       CMP              value, #0x30 ;if(value.equal("0
                                                            ") == 1) only shift
                                                            
   59 0000002E BF08 EA4F 
              1A0A             LSLEQ            translation, #4
   60 00000034 D0F3            BEQ              loop
   61 00000036         check_1
   62 00000036 F1B8 0F31       CMP              value, #0x31 ;if(value.equal("1
                                                            ") == 1) shift and 
                                                            insert 1
   63 0000003A BF04 EA4F 
              1A0A             LSLEQ            translation, #4
   64 00000040 F08A 0A01       EOREQ            translation, #0x1 ;last 4 bits 
                                                            are 0001
   65 00000044 D0EB            BEQ              loop
   66 00000046         check_change
   67 00000046 45A0            CMP              value, change_symbol ;if(value.
                                                            equal("2") == 1) tr
                                                            anslate and push it
                                                             into vett_output
   68 00000048 BF08 F7FF 
              FFFE             BLEQ             translator
   69 0000004E BF08 F04F 
              3AFF             MOVEQ            translation, #0xFFFFFFFF
   70 00000054 D0E3            BEQ              loop
   71 00000056         check_space
   72 00000056 45A8            CMP              value, space ;if(value.equal("3
                                                            ") == 1) insert int
                                                            o vett_out a space
   73 00000058 BF08 F7FF 
              FFFE             BLEQ             translator
   74 0000005E BF01 F04F 
              3AFF             MOVEQ            translation, #0xFFFFFFFF
   75 00000064 F04F 0820       MOVEQ            value, #0x20



ARM Macro Assembler    Page 4 


   76 00000068 F842 800B       STREQ            value, [vett_output, j] ;vett_o
                                                            utput[j] = " "
   77 0000006C F10B 0B01       ADDEQ            j, #1
   78 00000070 D0D5            BEQ              loop
   79 00000072         check_end
   80 00000072 45B0            CMP              value, sentence_end ;if(value.e
                                                            qual("4") == 1) got
                                                            o exit
   81 00000074 BF08 F7FF 
              FFFE             BLEQ             translator
   82 0000007A D000            BEQ              exit
   83 0000007C         
   84 0000007C E7CF            B                loop
   85 0000007E         exit
   86 0000007E 465B            MOV              vett_output_length, j
   87 00000080 F1AB 0001       SUB              R0, j, #1   ;RES
   88 00000084         
   89 00000084 E8BD 8DF0       LDMFD            sp!,{R4-R8,R10-R11,pc}
   90 00000088 4770            BX               lr
   91 0000008A                 ENDP
   92 0000008A         
   93 0000008A         translator
                               PROC
   94 0000008A E92D 47FF       STMFD            sp!,{R0-R10,lr}
   95 0000008E         
   96 0000008E 480B            LDR              vett_input, =Morse_Value
   97 00000090 F04F 0700       MOV              i, #0
   98 00000094 F04F 0124       MOV              vett_input_length, #36
   99 00000098         loop_translate
  100 00000098 428F            CMP              i, vett_input_length ;if(i >= v
                                                            ett_input_length) g
                                                            oto exit
  101 0000009A D20C            BHS              exit_loop
  102 0000009C         
  103 0000009C F850 8027       LDR              value, [vett_input, i, LSL #2] 
                                                            ;val = vett_input[i
                                                            ] in Morse_Value
  104 000000A0         
  105 000000A0 45C2            CMP              translation, value ;if(vett_inp
                                                            ut[i] == translatio
                                                            n) translation = Mo
                                                            rse_Code[i]
  106 000000A2 BF18 3701       ADDNE            i, #1       ;i++ if not equal
  107 000000A6 D1F7            BNE              loop_translate
  108 000000A8         
  109 000000A8 4805            LDR              vett_input, =Morse_Code
  110 000000AA F810 A007       LDRB             translation, [vett_input, i] ;t
                                                            ranslation = vett_i
                                                            nput[i] in Morse_Co
                                                            de
  111 000000AE         
  112 000000AE F802 A00B       STRB             translation, [vett_output, j] ;
                                                            vett_output[j] = tr
                                                            anslation
  113 000000B2 F10B 0B01       ADD              j, #1       ;j++
  114 000000B6         
  115 000000B6         exit_loop
  116 000000B6 E8BD 87FF       LDMFD            sp!,{R0-R10,pc}
  117 000000BA 4770            BX               lr



ARM Macro Assembler    Page 5 


  118 000000BC                 ENDP
  119 000000BC         
  120 000000BC                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\translate_morse.d -o.\translate_morse.o -I.\RTE\_Target_1 -IC:\U
sers\eliom\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\User
s\eliom\AppData\Local\Arm\Packs\Keil\LPC1700_DFP\2.7.1\Device\Include --predefi
ne="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ 
SETA 1" --predefine="LPC175x_6x SETA 1" --predefine="_RTE_ SETA 1" --list=.\tra
nslate_morse.lst translate_morse.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Morse_Code 00000000

Symbol: Morse_Code
   Definitions
      At line 3 in file translate_morse.s
   Uses
      At line 109 in file translate_morse.s
Comment: Morse_Code used once
Morse_Value 00000024

Symbol: Morse_Value
   Definitions
      At line 13 in file translate_morse.s
   Uses
      At line 96 in file translate_morse.s
Comment: Morse_Value used once
morse_code 00000000

Symbol: morse_code
   Definitions
      At line 2 in file translate_morse.s
   Uses
      None
Comment: morse_code unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_functions 00000000

Symbol: asm_functions
   Definitions
      At line 23 in file translate_morse.s
   Uses
      None
Comment: asm_functions unused
check_0 0000002A

Symbol: check_0
   Definitions
      At line 57 in file translate_morse.s
   Uses
      None
Comment: check_0 unused
check_1 00000036

Symbol: check_1
   Definitions
      At line 61 in file translate_morse.s
   Uses
      None
Comment: check_1 unused
check_change 00000046

Symbol: check_change
   Definitions
      At line 66 in file translate_morse.s
   Uses
      None
Comment: check_change unused
check_end 00000072

Symbol: check_end
   Definitions
      At line 79 in file translate_morse.s
   Uses
      None
Comment: check_end unused
check_space 00000056

Symbol: check_space
   Definitions
      At line 71 in file translate_morse.s
   Uses
      None
Comment: check_space unused
exit 0000007E

Symbol: exit
   Definitions
      At line 85 in file translate_morse.s
   Uses
      At line 52 in file translate_morse.s
      At line 82 in file translate_morse.s

exit_loop 000000B6




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: exit_loop
   Definitions
      At line 115 in file translate_morse.s
   Uses
      At line 101 in file translate_morse.s
Comment: exit_loop used once
loop 0000001E

Symbol: loop
   Definitions
      At line 50 in file translate_morse.s
   Uses
      At line 60 in file translate_morse.s
      At line 65 in file translate_morse.s
      At line 70 in file translate_morse.s
      At line 78 in file translate_morse.s
      At line 84 in file translate_morse.s

loop_translate 00000098

Symbol: loop_translate
   Definitions
      At line 99 in file translate_morse.s
   Uses
      At line 107 in file translate_morse.s
Comment: loop_translate used once
translate_morse 00000000

Symbol: translate_morse
   Definitions
      At line 37 in file translate_morse.s
   Uses
      At line 38 in file translate_morse.s
Comment: translate_morse used once
translator 0000008A

Symbol: translator
   Definitions
      At line 93 in file translate_morse.s
   Uses
      At line 68 in file translate_morse.s
      At line 73 in file translate_morse.s
      At line 81 in file translate_morse.s

12 symbols
362 symbols in table
