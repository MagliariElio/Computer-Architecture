.data
	v1: .double 0.471, 0.511, 0.909, 0.457,	0.591, 0.546, 0.645, 0.716
		.double 0.977, 0.122, 0.163, 0.823,	0.441, 0.499, 0.609, 0.663	
		.double 0.076, 0.339, 0.970, 0.832, 0.441, 0.096, 0.171, 0.482 
		.double 0.510, 0.260, 0.848, 0.952, 0.499, 0.726, 0.959, 0.675 
		.double 0.197, 0.513, 0.622, 0.429, 0.872, 0.779, 0.354, 0.845 
		.double 0.202, 0.875, 0.013, 0.431, 0.277, 0.734, 0.632, 0.339 
		.double 0.730, 0.764, 0.375, 0.212,	0.531, 0.584, 0.067, 0.705 
		.double 0.548, 0.854, 0.589, 0.291
	
	v2: .double 0.471, 0.511, 0.909, 0.457,	0.591, 0.546, 0.645, 0.716
		.double 0.977, 0.122, 0.163, 0.823,	0.441, 0.499, 0.609, 0.663	
		.double 0.076, 0.339, 0.970, 0.832, 0.441, 0.096, 0.171, 0.482 
		.double 0.510, 0.260, 0.848, 0.952, 0.499, 0.726, 0.959, 0.675 
		.double 0.197, 0.513, 0.622, 0.429, 0.872, 0.779, 0.354, 0.845 
		.double 0.202, 0.875, 0.013, 0.431, 0.277, 0.734, 0.632, 0.339 
		.double 0.730, 0.764, 0.375, 0.212,	0.531, 0.584, 0.067, 0.705 
		.double 0.548, 0.854, 0.589, 0.291
		
	v3: .double 0.471, 0.511, 0.909, 0.457,	0.591, 0.546, 0.645, 0.716
		.double 0.977, 0.122, 0.163, 0.823,	0.441, 0.499, 0.609, 0.663
		.double 0.076, 0.339, 0.970, 0.832, 0.441, 0.096, 0.171, 0.482
		.double 0.510, 0.260, 0.848, 0.952, 0.499, 0.726, 0.959, 0.675
		.double 0.197, 0.513, 0.622, 0.429, 0.872, 0.779, 0.354, 0.845
		.double 0.202, 0.875, 0.013, 0.431, 0.277, 0.734, 0.632, 0.339
		.double 0.730, 0.764, 0.375, 0.212,	0.531, 0.584, 0.067, 0.705
		.double 0.548, 0.854, 0.589, 0.291
		
	v4: .double 0.471, 0.511, 0.909, 0.457,	0.591, 0.546, 0.645, 0.716
		.double 0.977, 0.122, 0.163, 0.823,	0.441, 0.499, 0.609, 0.663	
		.double 0.076, 0.339, 0.970, 0.832, 0.441, 0.096, 0.171, 0.482 
		.double 0.510, 0.260, 0.848, 0.952, 0.499, 0.726, 0.959, 0.675 
		.double 0.197, 0.513, 0.622, 0.429, 0.872, 0.779, 0.354, 0.845 
		.double 0.202, 0.875, 0.013, 0.431, 0.277, 0.734, 0.632, 0.339 
		.double 0.730, 0.764, 0.375, 0.212,	0.531, 0.584, 0.067, 0.705 
		.double 0.548, 0.854, 0.589, 0.291
	
		
	v5: .space 480	
	v6: .space 480
	v7: .space 480
	
.text

MAIN:
	daddi r1, r0, 472		; indice i = r1 = 480 = (8 byte * 60 posizioni - 8 byte)	indice decrescente
	daddi r2, r0, -8			; indice j = r2 = 0							indice crescente
	
	loop:
		beq r1, r2, out		; if(r3 == 1) goto out
		
		l.d f1, v1(r1)		; f1 = v1[i]
		l.d f2, v2(r1)		; f2 = v2[i]
		l.d f3, v3(r1)		; f3 = v3[i]
		l.d f4, v4(r1)		; f4 = v4[i]
		
		add.d f5, f1, f2	; f5 = v1[i] + v2[i]
		mul.d f6, f4, f1	; f6 = v4[i] * v1[i]
		
		add.d f7, f2, f3	; f7 = v2[i] + v3[i]
		mul.d f5, f5, f3	; f5 = (v1[i] + v2[i]) * v3[i]
		
		add.d f5, f5, f4	; f5 = ((v1[i] + v2[i]) * v3[i]) + v4[i]
		
		div.d f6, f5, f6	; f6 = v5[i] / (v4[i] * v1[i])
		mul.d f7, f6, f7	; f7 = v6[i] * (v2[i] + v3[i])
		
		s.d f5, v5(r1)		; v5[i] = f5
		s.d f6, v6(r1)		; v6[i] = f6
		s.d f7, v7(r1)		; v7[i] = f7
		
		daddi r1, r1, -8	; i--
		
		j loop
		
	out:
		nop
		halt